plugins {
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
    id 'com.github.ben-manes.versions' version '0.47.0'
}

group = 'com.dio.catalog'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'org.hibernate.orm:hibernate-core:6.1.5.Final'
    implementation 'org.hibernate.orm:hibernate-envers:6.1.5.Final'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

bootJar {
    mainClass = 'com.dio.catalog.FerramentaCatalogServiceApplication'
}

// Adicionando o BOM do Spring Cloud para garantir compatibilidade com dependências Spring Cloud, se necessário
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2022.0.3"
    }
}

test {
    useJUnitPlatform()
}

// Usando JavaPluginExtension em vez de JavaPluginConvention
project.extensions.getByType(JavaPluginExtension).sourceCompatibility = JavaVersion.VERSION_17
project.extensions.getByType(JavaPluginExtension).targetCompatibility = JavaVersion.VERSION_17

// Removida a propriedade 'permissions' que estava causando o erro
